grammar org.tetrabox.example.Minitl with org.eclipse.xtext.common.Terminals

import "http://org.tetrabox.example.minitl/minitl/" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Transformation:
	'transformation'
	name=ID
	'{'
	(inputMetamodel=InputMetamodel)?
	('outputMetamodel' outputMetamodel=Metamodel)?
	(rules+=Rule (rules+=Rule)*)?
	'}';

InputMetamodel returns Metamodel:
	'inputMetamodel' Metamodel;

Metamodel:
	packages+=[ecore::EPackage|FQN] ("," packages+=[ecore::EPackage|FQN])*;

Rule returns Rule:
	'rule'
	name=ID
	'{'
	'from' objectTemplates+=ObjectTemplate
	'to' objectTemplates+=ObjectTemplate
	'}';

ObjectTemplate:
	name=ID ':' type=[ecore::EClass|FQN]
	('{'
	(bindings+=Binding (";" bindings+=Binding)*)? ';'?
	'}')?;

Binding:
	feature=[ecore::EStructuralFeature|ID] '=' value=Value;

Value:
	MaybeBinary;

MaybeBinary returns Value:
	MaybeFieldAccessValue ({BinaryExpression.expressions+=current} operator=Operator expressions+=MaybeFieldAccessValue)*;

MaybeFieldAccessValue returns Value:
	Primary ({FieldAccessValue.object=current} '.' feature=[ecore::EStructuralFeature|ID])*;

Primary returns Value:
	StringValue | ObjectTemplateValue | '(' MaybeBinary ')';

StringValue:
	value=STRING;

ObjectTemplateValue:
	objecttemplate=[ObjectTemplate|ID];

enum Operator returns Operator:
	ADD='+' | SUB='-';

FQN:
	ID ("." ID)*;